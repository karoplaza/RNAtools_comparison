import os
import glob
import pandas as pd

var_list = ["barnaba","clarna","dssr","fred","maxit","metbp","mc","rnapolis","rnaview"]
# path to list with all pdb files
path0 = "/usr/pdb"
file_pattern = "*.pdb"
file_paths = glob.glob(os.path.join(path0, file_pattern))
mol_list = [os.path.basename(path).replace(".pdb", "") for path in file_paths]
# based on a pdb files a list with all molecule names is created
print(mol_list)
type_list=["all","canonical","non-canonical"]

for type in type_list:
    # creating a dataframe where all results will be stored
    mol_df = pd.DataFrame({'name': mol_list})
    for var in var_list:
        df1_list = []
        for mol in mol_list:
            # example path to standarized files for a given tool
            path1 = f"/usr/Desktop/{var}/awk_new/{mol}.out/{mol}-{type}.csv"
            # checking the length of the csv files (excluding the header)
            # the number of rows is equal to predicted pairs
            try:
                df1 = pd.read_csv(path1)
                df1_pairs = len(df1)
                df1_list.append(df1_pairs)
            except:
                df1_pairs = 0
                df1_list.append(df1_pairs)

        # adding the results to the dataframe created above
        mol_df[var] = df1_list
        print(mol_df)

    sorted_mol_df = mol_df.sort_values(by='name')
    mol_df_filtered = sorted_mol_df[(sorted_mol_df.iloc[:, 1:] != 0).any(axis=1)]
    # To get a csv file out of the dataframe
    if type == "all":
        mol_df_filtered.to_csv(f"numpairs-all.csv")
    elif type == "canonical":
        mol_df_filtered.to_csv(f"numpairs-can.csv")
    elif type == "non-canonical":
        mol_df_filtered.to_csv(f"numpairs-ncan.csv")
    # To obtain the list of molecules for which at least 1 pair was generated by at least 1 tool
    if type == "all":
        mol_df_filtered[["name"]].to_csv("name_list.csv", index=False)






